using System.IO;
using UnityEngine;
using UnityEditor;

namespace AS.Tools.ScrollFix
{
    public static class ScrollRectFix
    {
        const string FROM_STRING = "m_Velocity = Vector3.Lerp(m_Velocity, newVelocity, deltaTime * 10);";
        const string TO_STRING = "m_Velocity = newVelocity; //[generated by UnityScrollFix]";

        const string PATH = "Packages/com.unity.ugui/Runtime/UI/Core/ScrollRect.cs";


        [MenuItem("AS/Tools/ScrollRect/Fix")]
        public static void Fix()
        {
            try
            {
                string[] lines = File.ReadAllLines(PATH);
                bool changed = false;

                for (var i = 0; i < lines.Length; i++)
                {
                    if (lines[i].Trim() == FROM_STRING)
                    {
                        if (lines[i - 1].Trim() == ("//" + TO_STRING))
                        {
                            lines[i - 1] = lines[i - 1].Replace(("//" + TO_STRING), TO_STRING);
                            lines[i] = lines[i].Replace(FROM_STRING, ("//" + FROM_STRING));
                        }
                        else
                        {
                            lines[i] = lines[i].Replace(FROM_STRING, string.Format("{0}\n\t\t\t\t//{1}", TO_STRING, FROM_STRING));
                        }
                        changed = true;
                    }
                    else if (lines[i].Trim() == TO_STRING)
                    {
                        EditorUtility.DisplayDialog("Scroll Fix", "Scroll already fixed", "Ok", null);

                        break;
                    }
                }

                if (changed)
                {
                    File.WriteAllLines(PATH, lines);

                    EditorUtility.DisplayDialog("Scroll Fix", "Scroll fixed successfully", "Ok", null);

                }
            }
            catch (System.Exception e)
            {
                ErrorMessage(e.ToString());
            }

        }

        [MenuItem("AS/Tools/ScrollRect/Restore")]
        public static void Restore()
        {
            try
            {
                string[] lines = File.ReadAllLines(PATH);
                bool changed = false;

                for (var i = 0; i < lines.Length; i++)
                {
                    if (lines[i].Trim() == TO_STRING)
                    {
                        lines[i] = string.Format("\t\t\t\t//{0}", TO_STRING);
                        if (lines[i + 1].Trim() == ("//" + FROM_STRING))
                        {
                            lines[i + 1] = string.Format("\t\t\t\t{0}", FROM_STRING);
                        }
                        else
                        {
                            lines[i] += string.Format("\n\t\t\t\t{0}", FROM_STRING);
                        }
                        changed = true;
                    }
                }

                if (changed)
                {
                    File.WriteAllLines(PATH, lines);

                    EditorUtility.DisplayDialog("Scroll Fix", "Scroll restore successfully", "Ok", null);
                }
                else
                {
                    EditorUtility.DisplayDialog("Scroll Fix", "Scroll needn't restore", "Ok", null);
                }
            }
            catch (System.Exception e)
            {
                ErrorMessage(e.ToString());
            }
        }


        static void ErrorMessage(string message)
        {
            EditorUtility.DisplayDialog("Scroll Fix", "Something went wrong\nLook at console to more information", "Ok", null);
            Debug.LogError("[Scroll Fix]\n" + message);
        }
    }
}